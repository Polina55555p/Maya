{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49b49cc2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cart-view\"\n};\nconst _hoisted_2 = {\n  class: \"container-xxl\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-6\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"col-6\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"Article: \" + _toDisplayString($options.product.article), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.product.name), 1 /* TEXT */)])])])]), _createCommentVNode(\"-\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACaA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAe;;EACjBA,KAAK,EAAC;AAAK;gEACZC,oBAIM;EAJDD,KAAK,EAAC;AAAO;;EASbA,KAAK,EAAC;AAAO;;6DAZ9BC,oBAsBU,WAtBVC,UAsBU,GArBND,oBAiBM,OAjBNE,UAiBM,GAhBFF,oBAeM,OAfNG,UAeM,GAdFC,UAIM,EAKNJ,oBAIM,OAJNK,UAIM,GAHFL,oBAAqC,WAAlC,WAAS,oBAAGM,gBAAO,CAACC,OAAO,kBAClCP,oBAAyB,4BAAnBM,gBAAO,CAACE,IAAI,0BAS9BC,wBAAQ","names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","$options","article","name","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\polin\\Desktop\\layout\\Maya-project\\maya\\src\\views\\CartView.vue"],"sourcesContent":["<template>\r\n    <section class=\"cart-view\">\r\n        <div class=\"container-xxl\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    \r\n                    \r\n\r\n                </div>\r\n                    \r\n  \r\n\r\n                \r\n                <div class=\"col-6\">\r\n                    <p>Article: {{ product.article }}</p>\r\n                <p>{{ product.name }}</p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n                \r\n                \r\n        \r\n    </section>\r\n    <!----->\r\n    \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nexport default {\r\n    methods: { \r\n      ...mapActions(['GET_PRODUCTS_FROM_API'])\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'PRODUCTS'\r\n      ]),\r\n      product() {\r\n        let result = {};\r\n        let vm = this;\r\n        this.PRODUCTS?.map(item => {\r\n            if (item.article === vm.$route.query.product) {\r\n                result = item\r\n            }\r\n        })\r\n        return result\r\n      },\r\n    }, \r\n    \r\n    mounted() {\r\n     this.GET_PRODUCTS_FROM_API()\r\n     //this.loaded = true;\r\n    },\r\n  \r\n    \r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.carousel-item.active {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.carousel.carousel-thumbs-bottom {\r\n  padding-bottom: 3rem;\r\n}\r\n\r\n.carousel-inner {\r\n    height: 430px;\r\n}\r\n\r\n\r\n\r\n.carousel .carousel-indicators button {\r\n  width: 100px;\r\n}\r\n.carousel-indicators {\r\n    widows: 470px;\r\n    \r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    \r\n    \r\n    img {\r\n        border-radius: 0.5rem;\r\n        \r\n    }\r\n    button {\r\n        padding: 0.5rem;\r\n        opacity: 1;\r\n    }\r\n}\r\n.carousel-control-prev-icon {\r\n    background-image: url('@/assets/img/catalog/arrow-prev.svg');\r\n}\r\n.carousel-control-next-icon {\r\n    background-image: url('@/assets/img/catalog/arrow-next.svg');\r\n}\r\n\r\n</style>\r\n/* */"]},"metadata":{},"sourceType":"module","externalDependencies":[]}